// Copyright 2021 logmesh.io
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: bot.proto

package bot_pb

import (
	filter "github.com/logmesh/go-genproto/type/filter"
	income_transaction "github.com/logmesh/go-genproto/type/income_transaction"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Error_Id int32

const (
	Error_OK                         Error_Id = 0
	Error_NOT_FOUND                  Error_Id = 1
	Error_UNAVAILABLE                Error_Id = 2
	Error_CURRENCY_UNKNOWN           Error_Id = 3
	Error_CURRENCY_UNAVAILABLE       Error_Id = 4
	Error_CURRENCY_UNSUPPORTED       Error_Id = 5
	Error_PAYMENT_SYSTEM_UNKNOWN     Error_Id = 6
	Error_PAYMENT_SYSTEM_UNAVAILABLE Error_Id = 7
	Error_PAYMENT_SYSTEM_UNSUPPORTED Error_Id = 8
)

// Enum value maps for Error_Id.
var (
	Error_Id_name = map[int32]string{
		0: "OK",
		1: "NOT_FOUND",
		2: "UNAVAILABLE",
		3: "CURRENCY_UNKNOWN",
		4: "CURRENCY_UNAVAILABLE",
		5: "CURRENCY_UNSUPPORTED",
		6: "PAYMENT_SYSTEM_UNKNOWN",
		7: "PAYMENT_SYSTEM_UNAVAILABLE",
		8: "PAYMENT_SYSTEM_UNSUPPORTED",
	}
	Error_Id_value = map[string]int32{
		"OK":                         0,
		"NOT_FOUND":                  1,
		"UNAVAILABLE":                2,
		"CURRENCY_UNKNOWN":           3,
		"CURRENCY_UNAVAILABLE":       4,
		"CURRENCY_UNSUPPORTED":       5,
		"PAYMENT_SYSTEM_UNKNOWN":     6,
		"PAYMENT_SYSTEM_UNAVAILABLE": 7,
		"PAYMENT_SYSTEM_UNSUPPORTED": 8,
	}
)

func (x Error_Id) Enum() *Error_Id {
	p := new(Error_Id)
	*p = x
	return p
}

func (x Error_Id) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Error_Id) Descriptor() protoreflect.EnumDescriptor {
	return file_bot_proto_enumTypes[0].Descriptor()
}

func (Error_Id) Type() protoreflect.EnumType {
	return &file_bot_proto_enumTypes[0]
}

func (x Error_Id) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Error_Id.Descriptor instead.
func (Error_Id) EnumDescriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{0, 0}
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorId Error_Id `protobuf:"varint,1,opt,name=error_id,json=errorId,proto3,enum=logmesh.bot.v1.Error_Id" json:"error_id,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetErrorId() Error_Id {
	if x != nil {
		return x.ErrorId
	}
	return Error_OK
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PaymentSystemCurrencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSystem string `protobuf:"bytes,1,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"` // example: TRON
	Currency      string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`                                // example: USDT
}

func (x *PaymentSystemCurrencyRequest) Reset() {
	*x = PaymentSystemCurrencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSystemCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSystemCurrencyRequest) ProtoMessage() {}

func (x *PaymentSystemCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSystemCurrencyRequest.ProtoReflect.Descriptor instead.
func (*PaymentSystemCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{1}
}

func (x *PaymentSystemCurrencyRequest) GetPaymentSystem() string {
	if x != nil {
		return x.PaymentSystem
	}
	return ""
}

func (x *PaymentSystemCurrencyRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type PaymentSystemCurrencyUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSystem string `protobuf:"bytes,1,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
	Currency      string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	UserId        uint32 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *PaymentSystemCurrencyUserRequest) Reset() {
	*x = PaymentSystemCurrencyUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSystemCurrencyUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSystemCurrencyUserRequest) ProtoMessage() {}

func (x *PaymentSystemCurrencyUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSystemCurrencyUserRequest.ProtoReflect.Descriptor instead.
func (*PaymentSystemCurrencyUserRequest) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{2}
}

func (x *PaymentSystemCurrencyUserRequest) GetPaymentSystem() string {
	if x != nil {
		return x.PaymentSystem
	}
	return ""
}

func (x *PaymentSystemCurrencyUserRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PaymentSystemCurrencyUserRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetIncomeTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSystem string `protobuf:"bytes,1,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
	Currency      string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Txid          string `protobuf:"bytes,3,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *GetIncomeTransactionRequest) Reset() {
	*x = GetIncomeTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIncomeTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncomeTransactionRequest) ProtoMessage() {}

func (x *GetIncomeTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncomeTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetIncomeTransactionRequest) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{3}
}

func (x *GetIncomeTransactionRequest) GetPaymentSystem() string {
	if x != nil {
		return x.PaymentSystem
	}
	return ""
}

func (x *GetIncomeTransactionRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetIncomeTransactionRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type GetIncomeTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSystem string         `protobuf:"bytes,1,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
	Currency      string         `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Filter        *filter.Filter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetIncomeTransactionsRequest) Reset() {
	*x = GetIncomeTransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIncomeTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncomeTransactionsRequest) ProtoMessage() {}

func (x *GetIncomeTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncomeTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetIncomeTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{4}
}

func (x *GetIncomeTransactionsRequest) GetPaymentSystem() string {
	if x != nil {
		return x.PaymentSystem
	}
	return ""
}

func (x *GetIncomeTransactionsRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetIncomeTransactionsRequest) GetFilter() *filter.Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetIncomeTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorId      Error_Id                                `protobuf:"varint,1,opt,name=error_id,json=errorId,proto3,enum=logmesh.bot.v1.Error_Id" json:"error_id,omitempty"`
	Transactions []*income_transaction.IncomeTransaction `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *GetIncomeTransactionResponse) Reset() {
	*x = GetIncomeTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIncomeTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncomeTransactionResponse) ProtoMessage() {}

func (x *GetIncomeTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncomeTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetIncomeTransactionResponse) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{5}
}

func (x *GetIncomeTransactionResponse) GetErrorId() Error_Id {
	if x != nil {
		return x.ErrorId
	}
	return Error_OK
}

func (x *GetIncomeTransactionResponse) GetTransactions() []*income_transaction.IncomeTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type BalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorId Error_Id `protobuf:"varint,1,opt,name=error_id,json=errorId,proto3,enum=logmesh.bot.v1.Error_Id" json:"error_id,omitempty"`
	Balance string   `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *BalanceResponse) Reset() {
	*x = BalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceResponse) ProtoMessage() {}

func (x *BalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceResponse.ProtoReflect.Descriptor instead.
func (*BalanceResponse) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{6}
}

func (x *BalanceResponse) GetErrorId() Error_Id {
	if x != nil {
		return x.ErrorId
	}
	return Error_OK
}

func (x *BalanceResponse) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type GetUserAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorId Error_Id `protobuf:"varint,1,opt,name=error_id,json=errorId,proto3,enum=logmesh.bot.v1.Error_Id" json:"error_id,omitempty"`
	Address string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetUserAddressResponse) Reset() {
	*x = GetUserAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAddressResponse) ProtoMessage() {}

func (x *GetUserAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAddressResponse.ProtoReflect.Descriptor instead.
func (*GetUserAddressResponse) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserAddressResponse) GetErrorId() Error_Id {
	if x != nil {
		return x.ErrorId
	}
	return Error_OK
}

func (x *GetUserAddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

var File_bot_proto protoreflect.FileDescriptor

var file_bot_proto_rawDesc = []byte{
	0x0a, 0x09, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6c, 0x6f, 0x67,
	0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x6c, 0x6f, 0x67,
	0x6d, 0x65, 0x73, 0x68, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x2f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x02,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x67, 0x6d,
	0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x49, 0x64, 0x52, 0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43,
	0x59, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x43,
	0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43,
	0x59, 0x5f, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12,
	0x1a, 0x0a, 0x16, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45,
	0x4d, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x06, 0x12, 0x1e, 0x0a, 0x1a, 0x50,
	0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x55, 0x4e,
	0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x07, 0x12, 0x1e, 0x0a, 0x1a, 0x50,
	0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x55, 0x4e,
	0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x08, 0x22, 0x61, 0x0a, 0x1c, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x7e,
	0x0a, 0x20, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x74,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x78, 0x69, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65,
	0x73, 0x68, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x98, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x67, 0x6d,
	0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x49, 0x64, 0x52, 0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x60, 0x0a, 0x0f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x49, 0x64,
	0x52, 0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0x67, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x49, 0x64, 0x52, 0x07, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0xa5, 0x04, 0x0a,
	0x03, 0x42, 0x6f, 0x74, 0x12, 0x5d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x2c, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x30, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e,
	0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73,
	0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x65, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x30, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e,
	0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2b, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62,
	0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6f, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x6f,
	0x74, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bot_proto_rawDescOnce sync.Once
	file_bot_proto_rawDescData = file_bot_proto_rawDesc
)

func file_bot_proto_rawDescGZIP() []byte {
	file_bot_proto_rawDescOnce.Do(func() {
		file_bot_proto_rawDescData = protoimpl.X.CompressGZIP(file_bot_proto_rawDescData)
	})
	return file_bot_proto_rawDescData
}

var file_bot_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bot_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_bot_proto_goTypes = []interface{}{
	(Error_Id)(0),                                // 0: logmesh.bot.v1.Error.Id
	(*Error)(nil),                                // 1: logmesh.bot.v1.Error
	(*PaymentSystemCurrencyRequest)(nil),         // 2: logmesh.bot.v1.PaymentSystemCurrencyRequest
	(*PaymentSystemCurrencyUserRequest)(nil),     // 3: logmesh.bot.v1.PaymentSystemCurrencyUserRequest
	(*GetIncomeTransactionRequest)(nil),          // 4: logmesh.bot.v1.GetIncomeTransactionRequest
	(*GetIncomeTransactionsRequest)(nil),         // 5: logmesh.bot.v1.GetIncomeTransactionsRequest
	(*GetIncomeTransactionResponse)(nil),         // 6: logmesh.bot.v1.GetIncomeTransactionResponse
	(*BalanceResponse)(nil),                      // 7: logmesh.bot.v1.BalanceResponse
	(*GetUserAddressResponse)(nil),               // 8: logmesh.bot.v1.GetUserAddressResponse
	(*filter.Filter)(nil),                        // 9: logmesh.type.Filter
	(*income_transaction.IncomeTransaction)(nil), // 10: logmesh.type.IncomeTransaction
}
var file_bot_proto_depIdxs = []int32{
	0,  // 0: logmesh.bot.v1.Error.error_id:type_name -> logmesh.bot.v1.Error.Id
	9,  // 1: logmesh.bot.v1.GetIncomeTransactionsRequest.filter:type_name -> logmesh.type.Filter
	0,  // 2: logmesh.bot.v1.GetIncomeTransactionResponse.error_id:type_name -> logmesh.bot.v1.Error.Id
	10, // 3: logmesh.bot.v1.GetIncomeTransactionResponse.transactions:type_name -> logmesh.type.IncomeTransaction
	0,  // 4: logmesh.bot.v1.BalanceResponse.error_id:type_name -> logmesh.bot.v1.Error.Id
	0,  // 5: logmesh.bot.v1.GetUserAddressResponse.error_id:type_name -> logmesh.bot.v1.Error.Id
	2,  // 6: logmesh.bot.v1.Bot.GetBalance:input_type -> logmesh.bot.v1.PaymentSystemCurrencyRequest
	3,  // 7: logmesh.bot.v1.Bot.GetUserAddress:input_type -> logmesh.bot.v1.PaymentSystemCurrencyUserRequest
	3,  // 8: logmesh.bot.v1.Bot.GetUserBalance:input_type -> logmesh.bot.v1.PaymentSystemCurrencyUserRequest
	4,  // 9: logmesh.bot.v1.Bot.GetIncomeTransaction:input_type -> logmesh.bot.v1.GetIncomeTransactionRequest
	5,  // 10: logmesh.bot.v1.Bot.GetIncomeTransactions:input_type -> logmesh.bot.v1.GetIncomeTransactionsRequest
	7,  // 11: logmesh.bot.v1.Bot.GetBalance:output_type -> logmesh.bot.v1.BalanceResponse
	8,  // 12: logmesh.bot.v1.Bot.GetUserAddress:output_type -> logmesh.bot.v1.GetUserAddressResponse
	7,  // 13: logmesh.bot.v1.Bot.GetUserBalance:output_type -> logmesh.bot.v1.BalanceResponse
	6,  // 14: logmesh.bot.v1.Bot.GetIncomeTransaction:output_type -> logmesh.bot.v1.GetIncomeTransactionResponse
	6,  // 15: logmesh.bot.v1.Bot.GetIncomeTransactions:output_type -> logmesh.bot.v1.GetIncomeTransactionResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_bot_proto_init() }
func file_bot_proto_init() {
	if File_bot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSystemCurrencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSystemCurrencyUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIncomeTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIncomeTransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIncomeTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bot_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bot_proto_goTypes,
		DependencyIndexes: file_bot_proto_depIdxs,
		EnumInfos:         file_bot_proto_enumTypes,
		MessageInfos:      file_bot_proto_msgTypes,
	}.Build()
	File_bot_proto = out.File
	file_bot_proto_rawDesc = nil
	file_bot_proto_goTypes = nil
	file_bot_proto_depIdxs = nil
}
