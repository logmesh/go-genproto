// Copyright 2021 logmesh.io
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: bot.proto

package bot_pb

import (
	filter "github.com/logmesh/go-genproto/type/filter"
	income_transaction "github.com/logmesh/go-genproto/type/income_transaction"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Error_Id int32

const (
	Error_OK                         Error_Id = 0
	Error_NOT_FOUND                  Error_Id = 1
	Error_UNAVAILABLE                Error_Id = 2
	Error_WRONG_ACCOUNT              Error_Id = 3
	Error_WRONG_ADDRESS              Error_Id = 4
	Error_WRONG_TXID                 Error_Id = 5
	Error_PAYMENT_SYSTEM_UNKNOWN     Error_Id = 6
	Error_PAYMENT_SYSTEM_UNAVAILABLE Error_Id = 7
	Error_PAYMENT_SYSTEM_UNSUPPORTED Error_Id = 8
)

// Enum value maps for Error_Id.
var (
	Error_Id_name = map[int32]string{
		0: "OK",
		1: "NOT_FOUND",
		2: "UNAVAILABLE",
		3: "WRONG_ACCOUNT",
		4: "WRONG_ADDRESS",
		5: "WRONG_TXID",
		6: "PAYMENT_SYSTEM_UNKNOWN",
		7: "PAYMENT_SYSTEM_UNAVAILABLE",
		8: "PAYMENT_SYSTEM_UNSUPPORTED",
	}
	Error_Id_value = map[string]int32{
		"OK":                         0,
		"NOT_FOUND":                  1,
		"UNAVAILABLE":                2,
		"WRONG_ACCOUNT":              3,
		"WRONG_ADDRESS":              4,
		"WRONG_TXID":                 5,
		"PAYMENT_SYSTEM_UNKNOWN":     6,
		"PAYMENT_SYSTEM_UNAVAILABLE": 7,
		"PAYMENT_SYSTEM_UNSUPPORTED": 8,
	}
)

func (x Error_Id) Enum() *Error_Id {
	p := new(Error_Id)
	*p = x
	return p
}

func (x Error_Id) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Error_Id) Descriptor() protoreflect.EnumDescriptor {
	return file_bot_proto_enumTypes[0].Descriptor()
}

func (Error_Id) Type() protoreflect.EnumType {
	return &file_bot_proto_enumTypes[0]
}

func (x Error_Id) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Error_Id.Descriptor instead.
func (Error_Id) EnumDescriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{0, 0}
}

type AccountType_Id int32

const (
	AccountType_USER    AccountType_Id = 0
	AccountType_COMPANY AccountType_Id = 1
)

// Enum value maps for AccountType_Id.
var (
	AccountType_Id_name = map[int32]string{
		0: "USER",
		1: "COMPANY",
	}
	AccountType_Id_value = map[string]int32{
		"USER":    0,
		"COMPANY": 1,
	}
)

func (x AccountType_Id) Enum() *AccountType_Id {
	p := new(AccountType_Id)
	*p = x
	return p
}

func (x AccountType_Id) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountType_Id) Descriptor() protoreflect.EnumDescriptor {
	return file_bot_proto_enumTypes[1].Descriptor()
}

func (AccountType_Id) Type() protoreflect.EnumType {
	return &file_bot_proto_enumTypes[1]
}

func (x AccountType_Id) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountType_Id.Descriptor instead.
func (AccountType_Id) EnumDescriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{3, 0}
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorId Error_Id `protobuf:"varint,1,opt,name=error_id,json=errorId,proto3,enum=logmesh.bot.v1.Error_Id" json:"error_id,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetErrorId() Error_Id {
	if x != nil {
		return x.ErrorId
	}
	return Error_OK
}

type PaymentSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSystem string `protobuf:"bytes,1,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
}

func (x *PaymentSystemRequest) Reset() {
	*x = PaymentSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentSystemRequest) ProtoMessage() {}

func (x *PaymentSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentSystemRequest.ProtoReflect.Descriptor instead.
func (*PaymentSystemRequest) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{1}
}

func (x *PaymentSystemRequest) GetPaymentSystem() string {
	if x != nil {
		return x.PaymentSystem
	}
	return ""
}

type BlockNum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorId  Error_Id `protobuf:"varint,1,opt,name=error_id,json=errorId,proto3,enum=logmesh.bot.v1.Error_Id" json:"error_id,omitempty"`
	BlockNum uint64   `protobuf:"varint,2,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
}

func (x *BlockNum) Reset() {
	*x = BlockNum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockNum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockNum) ProtoMessage() {}

func (x *BlockNum) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockNum.ProtoReflect.Descriptor instead.
func (*BlockNum) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{2}
}

func (x *BlockNum) GetErrorId() Error_Id {
	if x != nil {
		return x.ErrorId
	}
	return Error_OK
}

func (x *BlockNum) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

type AccountType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountType AccountType_Id `protobuf:"varint,1,opt,name=account_type,json=accountType,proto3,enum=logmesh.bot.v1.AccountType_Id" json:"account_type,omitempty"`
}

func (x *AccountType) Reset() {
	*x = AccountType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountType) ProtoMessage() {}

func (x *AccountType) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountType.ProtoReflect.Descriptor instead.
func (*AccountType) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{3}
}

func (x *AccountType) GetAccountType() AccountType_Id {
	if x != nil {
		return x.AccountType
	}
	return AccountType_USER
}

type AccountTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSystem string         `protobuf:"bytes,1,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
	AccountType   AccountType_Id `protobuf:"varint,2,opt,name=account_type,json=accountType,proto3,enum=logmesh.bot.v1.AccountType_Id" json:"account_type,omitempty"`
}

func (x *AccountTypeRequest) Reset() {
	*x = AccountTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountTypeRequest) ProtoMessage() {}

func (x *AccountTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountTypeRequest.ProtoReflect.Descriptor instead.
func (*AccountTypeRequest) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{4}
}

func (x *AccountTypeRequest) GetPaymentSystem() string {
	if x != nil {
		return x.PaymentSystem
	}
	return ""
}

func (x *AccountTypeRequest) GetAccountType() AccountType_Id {
	if x != nil {
		return x.AccountType
	}
	return AccountType_USER
}

type Asset20AccountTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSystem string         `protobuf:"bytes,1,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
	AccountType   AccountType_Id `protobuf:"varint,2,opt,name=account_type,json=accountType,proto3,enum=logmesh.bot.v1.AccountType_Id" json:"account_type,omitempty"`
	Contract      string         `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
}

func (x *Asset20AccountTypeRequest) Reset() {
	*x = Asset20AccountTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset20AccountTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset20AccountTypeRequest) ProtoMessage() {}

func (x *Asset20AccountTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset20AccountTypeRequest.ProtoReflect.Descriptor instead.
func (*Asset20AccountTypeRequest) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{5}
}

func (x *Asset20AccountTypeRequest) GetPaymentSystem() string {
	if x != nil {
		return x.PaymentSystem
	}
	return ""
}

func (x *Asset20AccountTypeRequest) GetAccountType() AccountType_Id {
	if x != nil {
		return x.AccountType
	}
	return AccountType_USER
}

func (x *Asset20AccountTypeRequest) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

type BalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorId Error_Id `protobuf:"varint,1,opt,name=error_id,json=errorId,proto3,enum=logmesh.bot.v1.Error_Id" json:"error_id,omitempty"`
	Balance string   `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *BalanceResponse) Reset() {
	*x = BalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceResponse) ProtoMessage() {}

func (x *BalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceResponse.ProtoReflect.Descriptor instead.
func (*BalanceResponse) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{6}
}

func (x *BalanceResponse) GetErrorId() Error_Id {
	if x != nil {
		return x.ErrorId
	}
	return Error_OK
}

func (x *BalanceResponse) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type AccountAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSystem     string         `protobuf:"bytes,1,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
	AccountType       AccountType_Id `protobuf:"varint,2,opt,name=account_type,json=accountType,proto3,enum=logmesh.bot.v1.AccountType_Id" json:"account_type,omitempty"`
	AccountId         uint32         `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CreateIfNotExists bool           `protobuf:"varint,4,opt,name=create_if_not_exists,json=createIfNotExists,proto3" json:"create_if_not_exists,omitempty"`
}

func (x *AccountAddressRequest) Reset() {
	*x = AccountAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAddressRequest) ProtoMessage() {}

func (x *AccountAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAddressRequest.ProtoReflect.Descriptor instead.
func (*AccountAddressRequest) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{7}
}

func (x *AccountAddressRequest) GetPaymentSystem() string {
	if x != nil {
		return x.PaymentSystem
	}
	return ""
}

func (x *AccountAddressRequest) GetAccountType() AccountType_Id {
	if x != nil {
		return x.AccountType
	}
	return AccountType_USER
}

func (x *AccountAddressRequest) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *AccountAddressRequest) GetCreateIfNotExists() bool {
	if x != nil {
		return x.CreateIfNotExists
	}
	return false
}

type AccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSystem string         `protobuf:"bytes,1,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
	AccountType   AccountType_Id `protobuf:"varint,2,opt,name=account_type,json=accountType,proto3,enum=logmesh.bot.v1.AccountType_Id" json:"account_type,omitempty"`
	AccountId     uint32         `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *AccountRequest) Reset() {
	*x = AccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRequest) ProtoMessage() {}

func (x *AccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRequest.ProtoReflect.Descriptor instead.
func (*AccountRequest) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{8}
}

func (x *AccountRequest) GetPaymentSystem() string {
	if x != nil {
		return x.PaymentSystem
	}
	return ""
}

func (x *AccountRequest) GetAccountType() AccountType_Id {
	if x != nil {
		return x.AccountType
	}
	return AccountType_USER
}

func (x *AccountRequest) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type Asset20AccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSystem string         `protobuf:"bytes,1,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
	AccountType   AccountType_Id `protobuf:"varint,2,opt,name=account_type,json=accountType,proto3,enum=logmesh.bot.v1.AccountType_Id" json:"account_type,omitempty"`
	AccountId     uint32         `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Contract      string         `protobuf:"bytes,4,opt,name=contract,proto3" json:"contract,omitempty"`
}

func (x *Asset20AccountRequest) Reset() {
	*x = Asset20AccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset20AccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset20AccountRequest) ProtoMessage() {}

func (x *Asset20AccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset20AccountRequest.ProtoReflect.Descriptor instead.
func (*Asset20AccountRequest) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{9}
}

func (x *Asset20AccountRequest) GetPaymentSystem() string {
	if x != nil {
		return x.PaymentSystem
	}
	return ""
}

func (x *Asset20AccountRequest) GetAccountType() AccountType_Id {
	if x != nil {
		return x.AccountType
	}
	return AccountType_USER
}

func (x *Asset20AccountRequest) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *Asset20AccountRequest) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

type AddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSystem string `protobuf:"bytes,1,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
	Address       string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddressRequest) Reset() {
	*x = AddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressRequest) ProtoMessage() {}

func (x *AddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressRequest.ProtoReflect.Descriptor instead.
func (*AddressRequest) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{10}
}

func (x *AddressRequest) GetPaymentSystem() string {
	if x != nil {
		return x.PaymentSystem
	}
	return ""
}

func (x *AddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type AddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorId Error_Id `protobuf:"varint,1,opt,name=error_id,json=errorId,proto3,enum=logmesh.bot.v1.Error_Id" json:"error_id,omitempty"`
	Address string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddressResponse) Reset() {
	*x = AddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressResponse) ProtoMessage() {}

func (x *AddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressResponse.ProtoReflect.Descriptor instead.
func (*AddressResponse) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{11}
}

func (x *AddressResponse) GetErrorId() Error_Id {
	if x != nil {
		return x.ErrorId
	}
	return Error_OK
}

func (x *AddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type IncomeTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSystem string `protobuf:"bytes,1,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
	Txid          string `protobuf:"bytes,2,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *IncomeTransactionRequest) Reset() {
	*x = IncomeTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomeTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomeTransactionRequest) ProtoMessage() {}

func (x *IncomeTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomeTransactionRequest.ProtoReflect.Descriptor instead.
func (*IncomeTransactionRequest) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{12}
}

func (x *IncomeTransactionRequest) GetPaymentSystem() string {
	if x != nil {
		return x.PaymentSystem
	}
	return ""
}

func (x *IncomeTransactionRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type Asset20IncomeTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSystem string `protobuf:"bytes,1,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
	Txid          string `protobuf:"bytes,2,opt,name=txid,proto3" json:"txid,omitempty"`
	Contract      string `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
}

func (x *Asset20IncomeTransactionRequest) Reset() {
	*x = Asset20IncomeTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset20IncomeTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset20IncomeTransactionRequest) ProtoMessage() {}

func (x *Asset20IncomeTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset20IncomeTransactionRequest.ProtoReflect.Descriptor instead.
func (*Asset20IncomeTransactionRequest) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{13}
}

func (x *Asset20IncomeTransactionRequest) GetPaymentSystem() string {
	if x != nil {
		return x.PaymentSystem
	}
	return ""
}

func (x *Asset20IncomeTransactionRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *Asset20IncomeTransactionRequest) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

type IncomeTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSystem string         `protobuf:"bytes,1,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
	AccountType   AccountType_Id `protobuf:"varint,2,opt,name=account_type,json=accountType,proto3,enum=logmesh.bot.v1.AccountType_Id" json:"account_type,omitempty"`
	Filter        *filter.Filter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *IncomeTransactionsRequest) Reset() {
	*x = IncomeTransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomeTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomeTransactionsRequest) ProtoMessage() {}

func (x *IncomeTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomeTransactionsRequest.ProtoReflect.Descriptor instead.
func (*IncomeTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{14}
}

func (x *IncomeTransactionsRequest) GetPaymentSystem() string {
	if x != nil {
		return x.PaymentSystem
	}
	return ""
}

func (x *IncomeTransactionsRequest) GetAccountType() AccountType_Id {
	if x != nil {
		return x.AccountType
	}
	return AccountType_USER
}

func (x *IncomeTransactionsRequest) GetFilter() *filter.Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type Asset20IncomeTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSystem string         `protobuf:"bytes,1,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
	AccountType   AccountType_Id `protobuf:"varint,2,opt,name=account_type,json=accountType,proto3,enum=logmesh.bot.v1.AccountType_Id" json:"account_type,omitempty"`
	Filter        *filter.Filter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Contract      string         `protobuf:"bytes,4,opt,name=contract,proto3" json:"contract,omitempty"`
}

func (x *Asset20IncomeTransactionsRequest) Reset() {
	*x = Asset20IncomeTransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset20IncomeTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset20IncomeTransactionsRequest) ProtoMessage() {}

func (x *Asset20IncomeTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset20IncomeTransactionsRequest.ProtoReflect.Descriptor instead.
func (*Asset20IncomeTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{15}
}

func (x *Asset20IncomeTransactionsRequest) GetPaymentSystem() string {
	if x != nil {
		return x.PaymentSystem
	}
	return ""
}

func (x *Asset20IncomeTransactionsRequest) GetAccountType() AccountType_Id {
	if x != nil {
		return x.AccountType
	}
	return AccountType_USER
}

func (x *Asset20IncomeTransactionsRequest) GetFilter() *filter.Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *Asset20IncomeTransactionsRequest) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

type IncomeTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorId      Error_Id                                `protobuf:"varint,1,opt,name=error_id,json=errorId,proto3,enum=logmesh.bot.v1.Error_Id" json:"error_id,omitempty"`
	Transactions []*income_transaction.IncomeTransaction `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *IncomeTransactionResponse) Reset() {
	*x = IncomeTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomeTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomeTransactionResponse) ProtoMessage() {}

func (x *IncomeTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomeTransactionResponse.ProtoReflect.Descriptor instead.
func (*IncomeTransactionResponse) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{16}
}

func (x *IncomeTransactionResponse) GetErrorId() Error_Id {
	if x != nil {
		return x.ErrorId
	}
	return Error_OK
}

func (x *IncomeTransactionResponse) GetTransactions() []*income_transaction.IncomeTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

var File_bot_proto protoreflect.FileDescriptor

var file_bot_proto_rawDesc = []byte{
	0x0a, 0x09, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6c, 0x6f, 0x67,
	0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x6c, 0x6f, 0x67,
	0x6d, 0x65, 0x73, 0x68, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x2f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfd, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x67, 0x6d,
	0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x49, 0x64, 0x52, 0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x64, 0x22, 0xbe, 0x01, 0x0a,
	0x02, 0x49, 0x64, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e,
	0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x57,
	0x52, 0x4f, 0x4e, 0x47, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x11,
	0x0a, 0x0d, 0x57, 0x52, 0x4f, 0x4e, 0x47, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10,
	0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x52, 0x4f, 0x4e, 0x47, 0x5f, 0x54, 0x58, 0x49, 0x44, 0x10,
	0x05, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x59, 0x53,
	0x54, 0x45, 0x4d, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x06, 0x12, 0x1e, 0x0a,
	0x1a, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f,
	0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x07, 0x12, 0x1e, 0x0a,
	0x1a, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f,
	0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x08, 0x22, 0x3d, 0x0a,
	0x14, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x5c, 0x0a, 0x08,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x33, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x67,
	0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x49, 0x64, 0x52, 0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x22, 0x6d, 0x0a, 0x0b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x64, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x1b, 0x0a, 0x02,
	0x49, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x10, 0x01, 0x22, 0x7e, 0x0a, 0x12, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x41, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6c,
	0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x19, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x32, 0x30, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x41,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62,
	0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x49, 0x64, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0x60, 0x0a,
	0x0f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x49, 0x64, 0x52, 0x07, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0xd1, 0x01, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x41, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x66, 0x5f,
	0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x66, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x41, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x49, 0x64, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0xbc, 0x01, 0x0a, 0x15, 0x41, 0x73, 0x73, 0x65, 0x74, 0x32, 0x30, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x41, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0x51,
	0x0a, 0x0e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x60, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x49, 0x64,
	0x52, 0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x55, 0x0a, 0x18, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0x78, 0x0a, 0x1f, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x32, 0x30, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x22, 0xb3, 0x01, 0x0a, 0x19, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x41, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x64, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c,
	0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xd6, 0x01, 0x0a, 0x20, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x32, 0x30, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x41, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6c,
	0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x6f, 0x67, 0x6d,
	0x65, 0x73, 0x68, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x19, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x49, 0x64, 0x52, 0x07, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c,
	0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xdd, 0x08, 0x0a, 0x03,
	0x42, 0x6f, 0x74, 0x12, 0x53, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6c,
	0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x6c, 0x6f,
	0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x66, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x32, 0x30,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x2e, 0x6c,
	0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x32, 0x30, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73,
	0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65,
	0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1e, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65,
	0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65,
	0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x00, 0x12, 0x56, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x32, 0x30, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e,
	0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x32, 0x30, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6c,
	0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73,
	0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x32, 0x30, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x2e,
	0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x32, 0x30, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62,
	0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x32, 0x30, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x2e, 0x6c,
	0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x32, 0x30, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x6f, 0x67, 0x6d, 0x65, 0x73,
	0x68, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6f,
	0x74, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x6f, 0x74, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_bot_proto_rawDescOnce sync.Once
	file_bot_proto_rawDescData = file_bot_proto_rawDesc
)

func file_bot_proto_rawDescGZIP() []byte {
	file_bot_proto_rawDescOnce.Do(func() {
		file_bot_proto_rawDescData = protoimpl.X.CompressGZIP(file_bot_proto_rawDescData)
	})
	return file_bot_proto_rawDescData
}

var file_bot_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_bot_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_bot_proto_goTypes = []interface{}{
	(Error_Id)(0),                                // 0: logmesh.bot.v1.Error.Id
	(AccountType_Id)(0),                          // 1: logmesh.bot.v1.AccountType.Id
	(*Error)(nil),                                // 2: logmesh.bot.v1.Error
	(*PaymentSystemRequest)(nil),                 // 3: logmesh.bot.v1.PaymentSystemRequest
	(*BlockNum)(nil),                             // 4: logmesh.bot.v1.BlockNum
	(*AccountType)(nil),                          // 5: logmesh.bot.v1.AccountType
	(*AccountTypeRequest)(nil),                   // 6: logmesh.bot.v1.AccountTypeRequest
	(*Asset20AccountTypeRequest)(nil),            // 7: logmesh.bot.v1.Asset20AccountTypeRequest
	(*BalanceResponse)(nil),                      // 8: logmesh.bot.v1.BalanceResponse
	(*AccountAddressRequest)(nil),                // 9: logmesh.bot.v1.AccountAddressRequest
	(*AccountRequest)(nil),                       // 10: logmesh.bot.v1.AccountRequest
	(*Asset20AccountRequest)(nil),                // 11: logmesh.bot.v1.Asset20AccountRequest
	(*AddressRequest)(nil),                       // 12: logmesh.bot.v1.AddressRequest
	(*AddressResponse)(nil),                      // 13: logmesh.bot.v1.AddressResponse
	(*IncomeTransactionRequest)(nil),             // 14: logmesh.bot.v1.IncomeTransactionRequest
	(*Asset20IncomeTransactionRequest)(nil),      // 15: logmesh.bot.v1.Asset20IncomeTransactionRequest
	(*IncomeTransactionsRequest)(nil),            // 16: logmesh.bot.v1.IncomeTransactionsRequest
	(*Asset20IncomeTransactionsRequest)(nil),     // 17: logmesh.bot.v1.Asset20IncomeTransactionsRequest
	(*IncomeTransactionResponse)(nil),            // 18: logmesh.bot.v1.IncomeTransactionResponse
	(*filter.Filter)(nil),                        // 19: logmesh.type.Filter
	(*income_transaction.IncomeTransaction)(nil), // 20: logmesh.type.IncomeTransaction
}
var file_bot_proto_depIdxs = []int32{
	0,  // 0: logmesh.bot.v1.Error.error_id:type_name -> logmesh.bot.v1.Error.Id
	0,  // 1: logmesh.bot.v1.BlockNum.error_id:type_name -> logmesh.bot.v1.Error.Id
	1,  // 2: logmesh.bot.v1.AccountType.account_type:type_name -> logmesh.bot.v1.AccountType.Id
	1,  // 3: logmesh.bot.v1.AccountTypeRequest.account_type:type_name -> logmesh.bot.v1.AccountType.Id
	1,  // 4: logmesh.bot.v1.Asset20AccountTypeRequest.account_type:type_name -> logmesh.bot.v1.AccountType.Id
	0,  // 5: logmesh.bot.v1.BalanceResponse.error_id:type_name -> logmesh.bot.v1.Error.Id
	1,  // 6: logmesh.bot.v1.AccountAddressRequest.account_type:type_name -> logmesh.bot.v1.AccountType.Id
	1,  // 7: logmesh.bot.v1.AccountRequest.account_type:type_name -> logmesh.bot.v1.AccountType.Id
	1,  // 8: logmesh.bot.v1.Asset20AccountRequest.account_type:type_name -> logmesh.bot.v1.AccountType.Id
	0,  // 9: logmesh.bot.v1.AddressResponse.error_id:type_name -> logmesh.bot.v1.Error.Id
	1,  // 10: logmesh.bot.v1.IncomeTransactionsRequest.account_type:type_name -> logmesh.bot.v1.AccountType.Id
	19, // 11: logmesh.bot.v1.IncomeTransactionsRequest.filter:type_name -> logmesh.type.Filter
	1,  // 12: logmesh.bot.v1.Asset20IncomeTransactionsRequest.account_type:type_name -> logmesh.bot.v1.AccountType.Id
	19, // 13: logmesh.bot.v1.Asset20IncomeTransactionsRequest.filter:type_name -> logmesh.type.Filter
	0,  // 14: logmesh.bot.v1.IncomeTransactionResponse.error_id:type_name -> logmesh.bot.v1.Error.Id
	20, // 15: logmesh.bot.v1.IncomeTransactionResponse.transactions:type_name -> logmesh.type.IncomeTransaction
	3,  // 16: logmesh.bot.v1.Bot.GetLastBlockNum:input_type -> logmesh.bot.v1.PaymentSystemRequest
	6,  // 17: logmesh.bot.v1.Bot.GetTotalBalance:input_type -> logmesh.bot.v1.AccountTypeRequest
	7,  // 18: logmesh.bot.v1.Bot.GetAsset20TotalBalance:input_type -> logmesh.bot.v1.Asset20AccountTypeRequest
	9,  // 19: logmesh.bot.v1.Bot.GetAddress:input_type -> logmesh.bot.v1.AccountAddressRequest
	12, // 20: logmesh.bot.v1.Bot.CheckAddressFormat:input_type -> logmesh.bot.v1.AddressRequest
	10, // 21: logmesh.bot.v1.Bot.GetAccountBalance:input_type -> logmesh.bot.v1.AccountRequest
	11, // 22: logmesh.bot.v1.Bot.GetAsset20AccountBalance:input_type -> logmesh.bot.v1.Asset20AccountRequest
	14, // 23: logmesh.bot.v1.Bot.GetIncomeTransaction:input_type -> logmesh.bot.v1.IncomeTransactionRequest
	15, // 24: logmesh.bot.v1.Bot.GetAsset20IncomeTransaction:input_type -> logmesh.bot.v1.Asset20IncomeTransactionRequest
	16, // 25: logmesh.bot.v1.Bot.GetIncomeTransactions:input_type -> logmesh.bot.v1.IncomeTransactionsRequest
	17, // 26: logmesh.bot.v1.Bot.GetAsset20IncomeTransactions:input_type -> logmesh.bot.v1.Asset20IncomeTransactionsRequest
	4,  // 27: logmesh.bot.v1.Bot.GetLastBlockNum:output_type -> logmesh.bot.v1.BlockNum
	8,  // 28: logmesh.bot.v1.Bot.GetTotalBalance:output_type -> logmesh.bot.v1.BalanceResponse
	8,  // 29: logmesh.bot.v1.Bot.GetAsset20TotalBalance:output_type -> logmesh.bot.v1.BalanceResponse
	13, // 30: logmesh.bot.v1.Bot.GetAddress:output_type -> logmesh.bot.v1.AddressResponse
	2,  // 31: logmesh.bot.v1.Bot.CheckAddressFormat:output_type -> logmesh.bot.v1.Error
	8,  // 32: logmesh.bot.v1.Bot.GetAccountBalance:output_type -> logmesh.bot.v1.BalanceResponse
	8,  // 33: logmesh.bot.v1.Bot.GetAsset20AccountBalance:output_type -> logmesh.bot.v1.BalanceResponse
	18, // 34: logmesh.bot.v1.Bot.GetIncomeTransaction:output_type -> logmesh.bot.v1.IncomeTransactionResponse
	18, // 35: logmesh.bot.v1.Bot.GetAsset20IncomeTransaction:output_type -> logmesh.bot.v1.IncomeTransactionResponse
	18, // 36: logmesh.bot.v1.Bot.GetIncomeTransactions:output_type -> logmesh.bot.v1.IncomeTransactionResponse
	18, // 37: logmesh.bot.v1.Bot.GetAsset20IncomeTransactions:output_type -> logmesh.bot.v1.IncomeTransactionResponse
	27, // [27:38] is the sub-list for method output_type
	16, // [16:27] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_bot_proto_init() }
func file_bot_proto_init() {
	if File_bot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockNum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset20AccountTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset20AccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomeTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset20IncomeTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomeTransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset20IncomeTransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomeTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bot_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bot_proto_goTypes,
		DependencyIndexes: file_bot_proto_depIdxs,
		EnumInfos:         file_bot_proto_enumTypes,
		MessageInfos:      file_bot_proto_msgTypes,
	}.Build()
	File_bot_proto = out.File
	file_bot_proto_rawDesc = nil
	file_bot_proto_goTypes = nil
	file_bot_proto_depIdxs = nil
}
